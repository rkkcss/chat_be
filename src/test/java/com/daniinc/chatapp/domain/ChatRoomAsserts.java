package com.daniinc.chatapp.domain;

import static com.daniinc.chatapp.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class ChatRoomAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatRoomAllPropertiesEquals(ChatRoom expected, ChatRoom actual) {
        assertChatRoomAutoGeneratedPropertiesEquals(expected, actual);
        assertChatRoomAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatRoomAllUpdatablePropertiesEquals(ChatRoom expected, ChatRoom actual) {
        assertChatRoomUpdatableFieldsEquals(expected, actual);
        assertChatRoomUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatRoomAutoGeneratedPropertiesEquals(ChatRoom expected, ChatRoom actual) {
        assertThat(expected)
            .as("Verify ChatRoom auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatRoomUpdatableFieldsEquals(ChatRoom expected, ChatRoom actual) {
        assertThat(expected)
            .as("Verify ChatRoom relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getCreatedAt())
                        .as("check createdAt")
                        .usingComparator(zonedDataTimeSameInstant)
                        .isEqualTo(actual.getCreatedAt())
            )
            .satisfies(
                e ->
                    assertThat(e.getModifiedAt())
                        .as("check modifiedAt")
                        .usingComparator(zonedDataTimeSameInstant)
                        .isEqualTo(actual.getModifiedAt())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatRoomUpdatableRelationshipsEquals(ChatRoom expected, ChatRoom actual) {}
}
