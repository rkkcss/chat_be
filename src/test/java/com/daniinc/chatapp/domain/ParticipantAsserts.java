package com.daniinc.chatapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ParticipantAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParticipantAllPropertiesEquals(Participant expected, Participant actual) {
        assertParticipantAutoGeneratedPropertiesEquals(expected, actual);
        assertParticipantAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParticipantAllUpdatablePropertiesEquals(Participant expected, Participant actual) {
        assertParticipantUpdatableFieldsEquals(expected, actual);
        assertParticipantUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParticipantAutoGeneratedPropertiesEquals(Participant expected, Participant actual) {
        assertThat(expected)
            .as("Verify Participant auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParticipantUpdatableFieldsEquals(Participant expected, Participant actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParticipantUpdatableRelationshipsEquals(Participant expected, Participant actual) {
        assertThat(expected)
            .as("Verify Participant relationships")
            .satisfies(e -> assertThat(e.getChatRoom()).as("check chatRoom").isEqualTo(actual.getChatRoom()));
    }
}
